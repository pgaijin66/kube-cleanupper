batsTesting: &batsTesting
    - step:
        name: Running bats testing
        image: atlassian/default-image:2
        script:
            - apt-get update && apt-get install -y apt-transport-https
            - curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -
            - echo "deb https://apt.kubernetes.io/ kubernetes-xenial main" | tee -a /etc/apt/sources.list.d/kubernetes.list
            - apt-get update && apt-get install -y kubectl
            - apt-get -y update && apt-get install -y bats
            - cd ${BITBUCKET_CLONE_DIR}
            - bats tests

dockerfileTesting: &dockerfileTesting
    - step:
        image: hadolint/hadolint:latest-debian
        # image: ghcr.io/hadolint/hadolint:latest-debian
        script:
          - hadolint Dockerfile

# JustAnotherStep: &JustAnotherStep
#     - step:
#         name: Just another step to do something
#         image: node:15.3-alpine
#         script:
#             - echo "This is just another step to do some stuffs"

# DevDeploymentStep: &DevDeploymentStep
#     - step:
#         name: Development Deployment
#         image: node:15.3-alpine
#         deployment: Dev
#         script:
#             - echo "This deploys to Dev environment"

# StageDeploymentStep: &StageDeploymentStep
#     - step:
#         name: Staging Deployment
#         image: node:15.3-alpine
#         deployment: Stage
#         script:
#             - echo "This deploys to Stage environment"

# ProdDeploymentStep: &ProdDeploymentStep
#     - step:
#         name: Production Deployment
#         image: node:15.3-alpine
#         deployment: Prod
#         script:
#             - echo "This deploys to Prod environment"

definitions:

  services:
      docker:
          memory: 6144 # increase memory for docker-in-docker from 1GB to 6GB

  buildContainerStep: &buildContainerStep
    - step:
        name: Create Container
        script:
            - export IMAGE_NAME="kube-cleanupper"
            - docker build . -t $DOCKER_REGISTRY/$IMAGE_NAME:$BITBUCKET_COMMIT
            - docker tag $DOCKER_REGISTRY/$IMAGE_NAME:$BITBUCKET_COMMIT $DOCKER_REGISTRY/$IMAGE_NAME:latest
            - docker login $DOCKER_REGISTRY -u $ARTIFACTORY_USER -p $ARTIFACTORY_PASSWORD
            - docker push $DOCKER_REGISTRY/$IMAGE_NAME:$BITBUCKET_COMMIT
            - docker push $DOCKER_REGISTRY/$IMAGE_NAME:latest
        services:
            - docker
        caches:
            - docker # adds docker layer caching
        size: 2x # Double resources available for this step, uses 2x build minutes

pipelines:
    default:
        # - <<: *batsTesting
        - <<: *dockerfileTesting
        - <<: *buildContainerStep
    #   - <<: *DevDeploymentStep

    branches:
        main:
        #  - <<: *lintingAndValidationStep
          - <<: *buildContainerStep
        #   - <<: *batsTesting
        #   - <<: *ProdDeploymentStep
